{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/jwt.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(_router, _jwtService) {\n      this._router = _router;\n      this._jwtService = _jwtService;\n      this.currentUser = null;\n\n      this._jwtService.getJwtUser().subscribe(res => this.currentUser = res);\n    }\n\n    canActivate(route, state) {\n      var _a, _b;\n\n      console.log(\"route.data.roles\", this.currentUser);\n\n      if (this.currentUser) {\n        console.log(route.data.roles);\n        console.log(route.data.roles.indexOf((_a = this.currentUser) === null || _a === void 0 ? void 0 : _a.role)); // check if route is restricted by role\n\n        if (route.data.roles && route.data.roles.indexOf((_b = this.currentUser) === null || _b === void 0 ? void 0 : _b.role) === -1) {\n          console.log(\"Error role access\"); // role not authorised so redirect to home page\n\n          this._router.navigate(['/auth/login']);\n\n          return false;\n        } // authorised so return true\n\n\n        return true;\n      }\n\n      console.log(\"Error authorise access\"); // not logged in so redirect to login page with the return url\n\n      this._router.navigate(['/auth/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.JwtService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}