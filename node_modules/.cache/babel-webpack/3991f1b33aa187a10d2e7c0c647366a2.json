{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/jwt.service\";\nexport let HttpRequestInterceptor = /*#__PURE__*/(() => {\n  class HttpRequestInterceptor {\n    constructor(jwtService) {\n      this.jwtService = jwtService;\n    }\n\n    intercept(request, next) {\n      this.jwtService.getJwtUser().subscribe(tokens => {\n        if (!request.reportProgress) {\n          request = request.clone({\n            setHeaders: {\n              'Accept-Language': 'en',\n              'Accept': 'application/json',\n              \"Access-Control-Allow-Origin\": \"*\",\n              'Content-Type': 'application/json;charset=utf-8'\n            }\n          });\n        } // add auth header with jwt if user is logged in and request is to api url\n\n\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        const isLoggedIn = tokens && tokens.token;\n\n        if (isLoggedIn && isApiUrl) {\n          request = request.clone({\n            setHeaders: {\n              Authorization: `Bearer ${tokens === null || tokens === void 0 ? void 0 : tokens.token}`\n            }\n          });\n        }\n      });\n      return next.handle(request);\n    }\n\n  }\n\n  HttpRequestInterceptor.ɵfac = function HttpRequestInterceptor_Factory(t) {\n    return new (t || HttpRequestInterceptor)(i0.ɵɵinject(i1.JwtService));\n  };\n\n  HttpRequestInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpRequestInterceptor,\n    factory: HttpRequestInterceptor.ɵfac\n  });\n  return HttpRequestInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}