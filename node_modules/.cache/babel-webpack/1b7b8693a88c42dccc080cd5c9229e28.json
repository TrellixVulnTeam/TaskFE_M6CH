{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { ConstantHelper } from '../helpers/constant-helper';\nimport { JwtResponse } from '../models/jwt-user.model';\nimport { User } from '../models/user.model';\nimport * as i0 from \"@angular/core\";\nexport let JwtService = /*#__PURE__*/(() => {\n  class JwtService {\n    constructor() {\n      this._jwtSubject = new BehaviorSubject(null);\n      this.jwtData = this._jwtSubject.asObservable();\n      const jwtTokenStorage = JSON.parse(localStorage.getItem(ConstantHelper.USER_TOKEN) || \"null\");\n\n      if (jwtTokenStorage != null) {\n        this.parseJwtResponse(jwtTokenStorage);\n      }\n    }\n\n    getJwtUser() {\n      return this.jwtData;\n    }\n\n    getUserDataFromToken() {\n      //fix !! this\n      const jwtData = JSON.parse(atob(this._jwtSubject.value.token.split('.')[1] || 'null'));\n      const user = new User();\n      user.userId = jwtData.nameid;\n      user.roles = jwtData.role;\n      user.imageUrl = jwtData.at_hash;\n      console.log(user);\n      return user;\n    }\n\n    parseJwtResponse(user) {\n      this.removeJwt();\n      const jwtResponse = new JwtResponse();\n      jwtResponse.token = user.token;\n      jwtResponse.refreshToken = user.refreshToken;\n      console.log(\"jwtUser\", jwtResponse);\n      const jwtToken = JSON.parse(atob(jwtResponse.token.split('.')[1] || 'null'));\n      jwtResponse.userId = jwtToken.nameid;\n      jwtResponse.role = jwtToken.role;\n      jwtResponse.imageUrl = jwtToken.at_hash;\n      console.log(jwtResponse);\n      jwtResponse.expire = new Date(jwtToken.exp * 1000);\n      const timeoutSec = jwtResponse.expire.getTime() - Date.now() - 60 * ConstantHelper.MINUTE_OFFSET_REFRESH * 1000;\n      jwtResponse.timeout = new Date(timeoutSec);\n\n      this._jwtSubject.next(jwtResponse);\n\n      console.log(JSON.stringify(jwtResponse));\n      localStorage.setItem(ConstantHelper.USER_TOKEN, JSON.stringify(this.getJwtJson()));\n    }\n\n    getJwtJson() {\n      var _a, _b;\n\n      return {\n        \"token\": (_a = this._jwtSubject.value) === null || _a === void 0 ? void 0 : _a.token,\n        \"refreshToken\": (_b = this._jwtSubject.value) === null || _b === void 0 ? void 0 : _b.refreshToken\n      };\n    }\n\n    removeJwt() {\n      localStorage.removeItem(ConstantHelper.USER_TOKEN);\n\n      this._jwtSubject.next(null);\n    }\n\n  }\n\n  JwtService.ɵfac = function JwtService_Factory(t) {\n    return new (t || JwtService)();\n  };\n\n  JwtService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtService,\n    factory: JwtService.ɵfac,\n    providedIn: 'root'\n  });\n  return JwtService;\n})();","map":null,"metadata":{},"sourceType":"module"}