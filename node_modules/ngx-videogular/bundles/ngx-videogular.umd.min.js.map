{"version":3,"sources":["../../../projects/ngx-videogular/src/lib/core/states/vg-states.ts","../../../projects/ngx-videogular/src/lib/core/services/vg-api.ts","../../../projects/ngx-videogular/src/lib/buffering/vg-buffering.ts","../../../projects/ngx-videogular/src/lib/buffering/vg-buffering.module.ts","../../../projects/ngx-videogular/src/lib/core/services/vg-controls-hidden.ts","../../../projects/ngx-videogular/src/lib/controls/vg-controls.ts","../../../projects/ngx-videogular/src/lib/core/services/vg-utils.ts","../../../projects/ngx-videogular/src/lib/core/services/vg-fullscreen-api.ts","../../../projects/ngx-videogular/src/lib/controls/vg-fullscreen/vg-fullscreen.ts","../../../projects/ngx-videogular/src/lib/controls/vg-mute/vg-mute.ts","../../../projects/ngx-videogular/src/lib/controls/vg-volume/vg-volume.ts","../../../projects/ngx-videogular/src/lib/controls/vg-play-pause/vg-play-pause.ts","../../../projects/ngx-videogular/src/lib/controls/vg-playback-button/vg-playback-button.ts","../../../projects/ngx-videogular/src/lib/controls/vg-scrub-bar/vg-scrub-bar.ts","../../../projects/ngx-videogular/src/lib/controls/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time.ts","../../../projects/ngx-videogular/src/lib/controls/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points.ts","../../../projects/ngx-videogular/src/lib/controls/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time.ts","../../../projects/ngx-videogular/src/lib/controls/vg-time-display/vg-time-display.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-videogular/src/lib/controls/vg-track-selector/vg-track-selector.ts","../../../projects/ngx-videogular/src/lib/controls/vg-quality-selector/vg-quality-selector.ts","../../../projects/ngx-videogular/src/lib/controls/vg-controls.module.ts","../../../projects/ngx-videogular/src/lib/core/events/vg-events.ts","../../../projects/ngx-videogular/src/lib/core/vg-media/vg-media.ts","../../../projects/ngx-videogular/src/lib/core/vg-cue-points/vg-cue-points.ts","../../../projects/ngx-videogular/src/lib/core/vg-player/vg-player.ts","../../../projects/ngx-videogular/src/lib/core/vg-media/vg-media-element.ts","../../../projects/ngx-videogular/src/lib/core/vg-core.module.ts","../../../projects/ngx-videogular/src/lib/ima-ads/vg-ima-ads.ts","../../../projects/ngx-videogular/src/lib/ima-ads/ima-ads.module.ts","../../../projects/ngx-videogular/src/lib/overlay-play/vg-overlay-play.ts","../../../projects/ngx-videogular/src/lib/overlay-play/vg-overlay-play.module.ts","../../../projects/ngx-videogular/src/lib/streaming/vg-dash/vg-dash.ts","../../../projects/ngx-videogular/src/lib/streaming/vg-hls/vg-hls.ts","../../../projects/ngx-videogular/src/lib/streaming/vg-streaming.module.ts"],"names":["VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","Injectable","VgAPI","this","medias","playerReadyEvent","EventEmitter","isPlayerReady","prototype","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","Object","defineProperty","$$getAllProperties","seconds","$$setAllProperties","state","volume","rate","seekTime","value","byPercent","$$seek","second","duration","currentTime","addTextTrack","type","label","language","$$addTextTrack","property","keys","length","current","total","left","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgBuffering","ref","API","checkInterval","currentPlayPos","lastPlayPos","subscriptions","isBuffering","nativeElement","ngOnInit","_this","push","subscribe","target","vgFor","bufferDetected","onUpdateBuffer","ngOnDestroy","forEach","s","unsubscribe","Component","args","selector","encapsulation","ViewEncapsulation","None","template","ElementRef","Input","HostBinding","NgModule","imports","CommonModule","declarations","exports","VgControlsHidden","isHiddenSubject","Subject","isHidden","asObservable","hidden","next","VgControls","isAdsPlaying","hideControls","vgAutohide","vgAutohideTime","mouseMove$","fromEvent","show","bind","touchStart$","onPlay","onPause","startAds","onStartAds","endAds","onEndAds","ngAfterViewInit","hide","clearTimeout","timer","hideAsync","setTimeout","VgUtils","getZIndex","elementZIndex","zIndex","tags","document","getElementsByTagName","i","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isCordova","URL","providedIn","VgFullscreenAPI","nativeFullscreen","isFullscreen","onChangeFullscreen","init","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgFullscreen","ariaValue","fsState","onClick","changeFullscreenState","onKeyDown","event","keyCode","preventDefault","HostListener","VgMute","currentVolume","changeMuteState","getVolume","VgVolume","isDragging","setVolume","calculateVolume","clientX","onMouseDown","mouseDownPosX","onDrag","onStopDrag","arrowAdjustVolume","Math","max","min","mousePosX","recObj","volumeBarRef","getBoundingClientRect","width","vol","ViewChild","static","VgPlayPause","playPause","getState","VgPlaybackButton","playbackValues","playbackIndex","updatePlaybackSpeed","playbackRate","getPlaybackRate","VgScrubBar","vgControlsHiddenState","hideScrubBar","vgSlider","isSeeking","wasPlaying","onHideScrubBar","seekStart","canPlay","seekMove","offset","percentage","scrollWidth","time","seekEnd","touchEnd","getTouchOffset","offsetLeft","offsetParent","touches","pageX","onMouseDownScrubBar","$event","isLive","offsetX","onMouseMoveScrubBar","onMouseUpScrubBar","onTouchStartScrubBar","onTouchMoveScrubBar","onTouchCancelScrubBar","onTouchEndScrubBar","getPercentage","VgScrubBarBufferingTime","getBufferTime","bufferTime","buffer","buffered","end","VgScrubBarCuePoints","onLoadedMetadataCalled","cuePoints","totalCues","onTimeUpdate","loadedMetadata","onLoadedMetadata","vgCuePoints","cuePointDuration","endTime","startTime","position","percentWidth","round","$$style","updateCuePoints","ngOnChanges","changes","currentValue","ngDoCheck","VgScrubBarCurrentTime","VgUtcPipe","transform","format","date","Date","ss","getUTCSeconds","mm","getUTCMinutes","hh","getUTCHours","replace","Pipe","name","VgTimeDisplay","vgProperty","vgFormat","getTime","t","isNaN","create","__values","o","Symbol","iterator","m","call","done","TypeError","__read","n","r","e","ar","error","VgTrackSelector","subs","Array","from","children","filter","tagName","kind","map","selected","default","srclang","tracks","arguments","concat","__spread","every","track","trackSelected","selectTrack","trackId","textTracks","mode","VgQualitySelector","onBitrateChange","bitrates","bitrate","toString","selectBitrate","index","bitrateSelected","Output","providers","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgMedia","api","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isBufferDetected","playAtferSync","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","loadedData","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","mutation","Observable","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","pauseObs","timeUpdateObs","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","combineLatest","pipe","params","_i","checkReadyState","readyState","allReady","some","syncSubscription","startSync","diff","mut","attributeName","loadMedia","removedNodes","toLowerCase","stopBufferCheck","load","playPromise","then","catch","undefined","detectChanges","Infinity","closed","startBufferCheck","_a","bufferCheck","checkBufferSubscription","newTrack","src","complete","Directive","ChangeDetectorRef","VgCuePoints","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","cuesSubscriptions","onLoad$","onLoad","cues","onEnter$","onEnter","onExit$","onExit","VgPlayer","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","ContentChildren","VgMediaElement","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","activatableClassId","effectRequired","config","msSetMediaKeys","mediaKeys","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","addEventListener","listener","useCapture","VgImaAds","onAdStart","onAdStop","onSkipAd","displayState","onContentEnded","google","initializations","onUpdateState","ima","adsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","loadAds","onMissingGoogleImaLoader","Ima","vgSkipButton","skipButton","querySelector","style","display","onClickSkip","insertBefore","firstChild","w","offsetWidth","h","offsetHeight","adsManager","resize","ViewMode","FULLSCREEN","NORMAL","vgCompanion","googletag","cmd","adUnitPath","vgNetwork","vgUnitPath","slot","defineSlot","vgCompanionSize","addService","companionAds","pubads","setRefreshUnfilledSlots","enableVideoAds","enableServices","adsLoaded","adDisplayContainer","initialize","requestAds","vgAdTagUrl","adTagUrl","adsRequest","AdsRequest","computedStyle","linearAdSlotWidth","linearAdSlotHeight","height","nonLinearAdSlotWidth","nonLinearAdSlotHeight","evt","getAdsManager","processAdsManager","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","SKIPPABLE_STATE_CHANGED","onSkippableStateChanged","ALL_ADS_COMPLETED","onAllAdsComplete","COMPLETE","onAdComplete","start","isSkippable","getAdSkippableState","skip","destroy","getCuePoints","join","currentAd","dispatchEvent","CustomEvent","contentComplete","imaAdsElement","AdDisplayContainer","AdsLoader","VgOverlayPlay","VgDASH","onGetBitrates","getAttribute","createPlayer","destroyPlayer","dash","vgDash","drmOptions","vgDRMLicenseServer","vgDRMToken","drmServer","hasOwnProperty","httpRequestHeaders","Authorization","dashjs","MediaPlayer","getDebug","setLogToBrowserConsole","setAutoPlay","on","events","STREAM_INITIALIZED","audioList","getBitrateInfoListFor","videoList","qualityIndex","unshift","mediaType","setProtectionData","attachSource","setBitrate","getAutoSwitchQualityFor","setAutoSwitchQualityFor","nextIndex","setQualityFor","reset","exportAs","VgHLS","vgHlsHeaders","crossorigin","preload","autoStartLoad","xhrSetup","xhr","url","withCredentials","_b","_c","key","setRequestHeader","hls","startLoad","vgHls","Hls","isSupported","video","Events","MANIFEST_PARSED","data","levels","LEVEL_LOADED","details","live","loadSource","attachMedia","nextLevel"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VgStates {\n  static VG_ENDED = 'ended';\n  static VG_PAUSED = 'paused';\n  static VG_PLAYING = 'playing';\n  static VG_LOADING = 'waiting';\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { IPlayable } from '../vg-media/i-playable';\nimport { VgStates } from '../states/vg-states';\nimport { VgFullscreenAPI } from './vg-fullscreen-api';\n\n@Injectable()\nexport class VgAPI {\n  // tslint:disable-next-line:ban-types\n  medias: Object = {}; // TODO: refactor to Set<IPlayable>\n  videogularElement: any;\n  playerReadyEvent: EventEmitter<any> = new EventEmitter(true);\n  isPlayerReady = false;\n  fsAPI: VgFullscreenAPI;\n\n  constructor() {\n\n  }\n\n  onPlayerReady(fsAPI: VgFullscreenAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n\n  getDefaultMedia(): IPlayable {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n\n  getMasterMedia(): IPlayable {\n    let master: any;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n    return master || this.getDefaultMedia();\n  }\n\n  isMasterDefined(): boolean {\n    let result = false;\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n    return result;\n  }\n\n  getMediaById(id: string = null): IPlayable {\n    let media = this.medias[id];\n\n    if (!id || id === '*') {\n      media = this;\n    }\n\n    return media;\n  }\n\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n\n  $$seek(media: IPlayable, value: number, byPercent: boolean = false) {\n    let second: number;\n    let duration: number = media.duration;\n\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    media.currentTime = second;\n  }\n\n  addTextTrack(type: string, label?: string, language?: string) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n  $$addTextTrack(media: IPlayable, type: string, label?: string, language?: string) {\n    media.addTextTrack(type, label, language);\n  }\n\n  $$getAllProperties(property: string) {\n    const medias = {};\n    let result: any;\n\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n\n    const nMedias = Object.keys(medias).length;\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n\n          case 'time':\n            result = { current: 0, total: 0, left: 0 };\n            break;\n        }\n        break;\n\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n\n    return result;\n  }\n\n  $$setAllProperties(property: string, value: any) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n\n  registerElement(elem: HTMLElement) {\n    this.videogularElement = elem;\n  }\n\n  registerMedia(media: IPlayable) {\n    this.medias[media.id] = media;\n  }\n\n  unregisterMedia(media: IPlayable) {\n    delete this.medias[media.id];\n  }\n\n\n}\n","import { Component, ElementRef, HostBinding, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VgAPI } from '../core/services/vg-api';\nimport { IPlayable } from '../core/vg-media/i-playable';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-buffering',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-buffering\">\n            <div class=\"bufferingContainer\">\n                <div class=\"loadingSpinner\"></div>\n            </div>\n        </div>`,\n  styles: [`\n        vg-buffering {\n            display: none;\n            z-index: 201;\n        }\n        vg-buffering.is-buffering {\n            display: block;\n        }\n\n        .vg-buffering {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n        .vg-buffering .bufferingContainer {\n            width: 100%;\n            position: absolute;\n            cursor: pointer;\n            top: 50%;\n            margin-top: -50px;\n            zoom: 1;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n        .vg-buffering .loadingSpinner {\n            background-color: rgba(0, 0, 0, 0);\n            border: 5px solid rgba(255, 255, 255, 1);\n            opacity: .9;\n            border-top: 5px solid rgba(0, 0, 0, 0);\n            border-left: 5px solid rgba(0, 0, 0, 0);\n            border-radius: 50px;\n            box-shadow: 0 0 35px #FFFFFF;\n            width: 50px;\n            height: 50px;\n            margin: 0 auto;\n            -moz-animation: spin .5s infinite linear;\n            -webkit-animation: spin .5s infinite linear;\n        }\n        .vg-buffering .loadingSpinner .stop {\n            -webkit-animation-play-state: paused;\n            -moz-animation-play-state: paused;\n        }\n        @-moz-keyframes spin {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(360deg);\n            }\n        }\n        @-moz-keyframes spinoff {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(-360deg);\n            }\n        }\n        @-webkit-keyframes spin {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(360deg);\n            }\n        }\n        @-webkit-keyframes spinoff {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(-360deg);\n            }\n        }\n    ` ]\n})\nexport class VgBuffering implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: IPlayable;\n  checkInterval = 50;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe(\n        isBuffering => this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgBuffering } from './vg-buffering';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgBuffering\n  ],\n  exports: [\n    VgBuffering\n  ]\n})\nexport class VgBufferingModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class VgControlsHidden {\n  isHidden: Observable<boolean>;\n\n  private isHiddenSubject: Subject<boolean> = new Subject<boolean>();\n\n  constructor() {\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n\n  state(hidden: boolean) {\n    this.isHiddenSubject.next(hidden);\n  }\n}\n","import {\n  Component, Input, OnInit, ElementRef, HostBinding, AfterViewInit, ViewEncapsulation,\n  EventEmitter, Output, OnDestroy\n} from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\n\nimport { VgStates } from '../core/states/vg-states';\nimport { fromEvent } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-controls',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [`\n        vg-controls {\n            position: absolute;\n            display: flex;\n            width: 100%;\n            height: 50px;\n            z-index: 300;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            -webkit-transition: bottom 1s;\n            -khtml-transition: bottom 1s;\n            -moz-transition: bottom 1s;\n            -ms-transition: bottom 1s;\n            transition: bottom 1s;\n        }\n        vg-controls.hide {\n            bottom: -50px;\n        }\n    `]\n})\nexport class VgControls implements OnInit, AfterViewInit, OnDestroy {\n  elem: HTMLElement;\n  target: any;\n\n  @HostBinding('style.pointer-events') isAdsPlaying = 'initial';\n  @HostBinding('class.hide') hideControls = false;\n\n  @Input() vgFor: string;\n  @Input() vgAutohide = false;\n  @Input() vgAutohideTime = 3;\n\n  private timer: any;\n  private hideTimer: any;\n\n  mouseMove$: Observable<any>;\n  touchStart$: Observable<any>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private API: VgAPI, private ref: ElementRef, private hidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n    this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n\n    this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n    this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n  }\n\n  ngAfterViewInit() {\n    if (this.vgAutohide) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  onPlay() {\n    if (this.vgAutohide) {\n      this.hide();\n    }\n  }\n\n  onPause() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n  }\n\n  onStartAds() {\n    this.isAdsPlaying = 'none';\n  }\n\n  onEndAds() {\n    this.isAdsPlaying = 'initial';\n  }\n\n  hide() {\n    if (this.vgAutohide) {\n      clearTimeout(this.timer);\n      this.hideAsync();\n    }\n  }\n\n  show() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n\n    if (this.vgAutohide) {\n      this.hideAsync();\n    }\n  }\n\n  private hideAsync() {\n    if (this.API.state === VgStates.VG_PLAYING) {\n      this.timer = setTimeout(() => {\n        this.hideControls = true;\n        this.hidden.state(true);\n      }, this.vgAutohideTime * 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VgUtils {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   * @returns z-Index\n   */\n  static getZIndex(): number {\n    let zIndex = 1;\n    let elementZIndex: number;\n\n    const tags = document.getElementsByTagName('*');\n\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n\n    return zIndex;\n  }\n\n  // Very simple mobile detection, not 100% reliable\n  static isMobileDevice() {\n    return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);\n  }\n\n  static isiOSDevice() {\n    return (navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n  }\n\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n}\n","import { EventEmitter, Injectable, QueryList } from '@angular/core';\nimport { VgUtils } from './vg-utils';\nimport { VgMedia } from '../vg-media/vg-media';\nimport { Subscription, fromEvent } from 'rxjs';\n\n@Injectable()\nexport class VgFullscreenAPI {\n  polyfill: any;\n  onchange: string;\n  onerror: string;\n  nativeFullscreen = true;\n  isFullscreen = false;\n  isAvailable: boolean;\n  videogularElement: HTMLElement;\n  medias: QueryList<VgMedia>;\n\n  fsChangeSubscription: Subscription;\n  onChangeFullscreen: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n  }\n\n  init(elem: HTMLElement, medias: QueryList<VgMedia>) {\n    this.videogularElement = elem;\n    this.medias = medias;\n\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen', // Hack for iOS: webkitfullscreenchange it's not firing\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtils.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = (this.polyfill != null);\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n\n      // iOS dispatches the fullscreen change event from video element\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n\n      // HTML5 implementation dispatches the fullscreen change event from the element\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element: any = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    }  else {\n      this.request(element);\n    }\n  }\n\n  request(elem: any) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true);\n\n    // Perform native full screen support\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtils.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if ((!this.polyfill.enabled && elem === this.videogularElement) || VgUtils.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      }  else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem: any) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false);\n\n    // Exit from native fullscreen\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n}\n","import { Component, ElementRef, HostListener, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgFullscreenAPI } from '../../core/services/vg-fullscreen-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n// tslint:disable:ban-types\n@Component({\n  selector: 'vg-fullscreen',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-fullscreen]=\"!isFullscreen\"\n             [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"fullscreen button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-fullscreen {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n\n        vg-fullscreen .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgFullscreen implements OnInit, OnDestroy {\n  elem: HTMLElement;\n  vgFor: string;\n  target: Object;\n  isFullscreen = false;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'normal mode';\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    this.ariaValue = fsState ? 'fullscren mode' : 'normal mode';\n    this.isFullscreen = fsState;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeFullscreenState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeFullscreenState();\n    }\n  }\n\n  changeFullscreenState() {\n    let element = this.target;\n\n    if (this.target instanceof VgAPI) {\n      element = null;\n    }\n\n    this.fsAPI.toggleFullscreen(element);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, HostListener, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-mute',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n             [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n             [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n             [class.vg-icon-volume_off]=\"getVolume() === 0\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"mute button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-mute {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-mute .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgMute implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  elem: HTMLElement;\n  target: any;\n\n  currentVolume: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 'unmuted';\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.currentVolume = this.target.volume;\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.changeMuteState();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeMuteState();\n    }\n  }\n\n  changeMuteState() {\n    const volume = this.getVolume();\n\n    if (volume === 0) {\n      if (this.target.volume === 0 && this.currentVolume === 0) {\n        this.currentVolume = 1;\n      }\n\n      this.target.volume = this.currentVolume;\n    } else {\n      this.currentVolume = volume;\n      this.target.volume = 0;\n    }\n  }\n\n  getVolume() {\n    const volume = this.target ? this.target.volume : 0;\n    this.ariaValue = volume ? 'unmuted' : 'muted';\n    return volume;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-volume',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div\n            #volumeBar\n            class=\"volumeBar\"\n            tabindex=\"0\"\n            role=\"slider\"\n            aria-label=\"volume level\"\n            aria-level=\"polite\"\n            [attr.aria-valuenow]=\"ariaValue\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-orientation=\"horizontal\"\n            [attr.aria-valuetext]=\"ariaValue + '%'\"\n            (click)=\"onClick($event)\"\n            (mousedown)=\"onMouseDown($event)\">\n            <div class=\"volumeBackground\" [ngClass]=\"{dragging: isDragging}\">\n                <div class=\"volumeValue\" [style.width]=\"(getVolume() * (100-15)) + '%'\"></div>\n                <div class=\"volumeKnob\" [style.left]=\"(getVolume() * (100-15)) + '%'\"></div>\n            </div>\n        </div>\n    `,\n  styles: [\n    `\n        vg-volume {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 100px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-volume .volumeBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n        }\n        vg-volume .volumeBackground {\n            display: flex;\n            flex-grow: 1;\n            height: 5px;\n            pointer-events: none;\n            background-color: #333;\n        }\n        vg-volume .volumeValue {\n            display: flex;\n            height: 5px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeKnob {\n            position: absolute;\n            width: 15px; height: 15px;\n            left: 0; top: 50%;\n            transform: translateY(-50%);\n            border-radius: 15px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeBackground.dragging .volumeValue,\n        vg-volume .volumeBackground.dragging .volumeKnob {\n            transition: none;\n        }\n    `\n  ]\n})\nexport class VgVolume implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @ViewChild('volumeBar', { static: true })\n  volumeBarRef: ElementRef;\n\n  elem: HTMLElement;\n  target: any;\n  isDragging: boolean;\n  mouseDownPosX: number;\n  ariaValue: number;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n    this.isDragging = false;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(\n        this.API.playerReadyEvent.subscribe(() => this.onPlayerReady())\n      );\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.ariaValue = this.getVolume() * 100;\n  }\n\n  onClick(event: { clientX: number }) {\n    this.setVolume(this.calculateVolume(event.clientX));\n  }\n\n  onMouseDown(event: { clientX: number }) {\n    this.mouseDownPosX = event.clientX;\n    this.isDragging = true;\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.setVolume(this.calculateVolume(event.clientX));\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onStopDrag(event: { clientX: number }) {\n    if (this.isDragging) {\n      this.isDragging = false;\n      if (this.mouseDownPosX === event.clientX) {\n        this.setVolume(this.calculateVolume(event.clientX));\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (event.keyCode === 38 || event.keyCode === 39) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n    } else if (event.keyCode === 37 || event.keyCode === 40) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n    }\n  }\n\n  calculateVolume(mousePosX: number) {\n    const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n    const volumeBarOffsetLeft: number = recObj.left;\n    const volumeBarWidth: number = recObj.width;\n    return (mousePosX - volumeBarOffsetLeft) / volumeBarWidth * 100;\n  }\n\n  setVolume(vol: number) {\n    this.target.volume = Math.max(0, Math.min(1, vol / 100));\n    this.ariaValue = this.target.volume * 100;\n  }\n\n  getVolume(): number {\n    return this.target ? this.target.volume : 0;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","import { Component, ElementRef, HostListener, OnInit, Input, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgStates } from '../../core/states/vg-states';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-play-pause',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"icon\"\n             [class.vg-icon-pause]=\"getState() === 'playing'\"\n             [class.vg-icon-play_arrow]=\"getState() === 'paused' || getState() === 'ended'\"\n             tabindex=\"0\"\n             role=\"button\"\n             [attr.aria-label]=\"getState() === 'paused'?'play':'pause'\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n  styles: [`\n        vg-play-pause {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-play-pause .icon {\n            pointer-events: none;\n        }\n    ` ]\n})\nexport class VgPlayPause implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = VgStates.VG_PAUSED;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.playPause();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.playPause();\n    }\n  }\n\n  playPause() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, HostListener, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-playback-button',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <span class=\"button\"\n          tabindex=\"0\"\n          role=\"button\"\n          aria-label=\"playback speed button\"\n          [attr.aria-valuetext]=\"ariaValue\">\n        {{getPlaybackRate()}}x\n    </span>`,\n  styles: [`\n        vg-playback-button {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n        vg-playback-button .button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 50px;\n        }\n    ` ]\n})\nexport class VgPlaybackButton implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  @Input() playbackValues: Array<string>;\n  playbackIndex: number;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue = 1;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n    this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n    this.playbackIndex = 1;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.updatePlaybackSpeed();\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.updatePlaybackSpeed();\n    }\n  }\n\n  updatePlaybackSpeed() {\n    this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n\n    if (this.target instanceof VgAPI) {\n      this.target.playbackRate = (this.playbackValues[this.playbackIndex]);\n    } else {\n      this.target.playbackRate[this.vgFor] = (this.playbackValues[this.playbackIndex]);\n    }\n  }\n\n  getPlaybackRate() {\n    this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component, ElementRef, Input, HostListener, OnInit, ViewEncapsulation, HostBinding,\n  OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { VgControlsHidden } from '../../core/services/vg-controls-hidden';\nimport { VgStates } from '../../core/states/vg-states';\nimport { Subscription } from 'rxjs';\n\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"scrubBar\"\n             tabindex=\"0\"\n             role=\"slider\"\n             aria-label=\"scrub bar\"\n             aria-level=\"polite\"\n             [attr.aria-valuenow]=\"getPercentage()\"\n             aria-valuemin=\"0\"\n             aria-valuemax=\"100\"\n             [attr.aria-valuetext]=\"getPercentage() + '%'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n  styles: [`\n        vg-scrub-bar {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            position: absolute;\n            width: 100%;\n            height: 5px;\n            bottom: 50px;\n            margin: 0;\n            cursor: pointer;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.75);\n            z-index: 250;\n            -webkit-transition: bottom 1s, opacity 0.5s;\n            -khtml-transition: bottom 1s, opacity 0.5s;\n            -moz-transition: bottom 1s, opacity 0.5s;\n            -ms-transition: bottom 1s, opacity 0.5s;\n            transition: bottom 1s, opacity 0.5s;\n        }\n        vg-scrub-bar .scrubBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n            height: 100%;\n        }\n        vg-controls vg-scrub-bar {\n            position: relative;\n            bottom: 0;\n            background: transparent;\n            height: 50px;\n            flex-grow: 1;\n            flex-basis: 0;\n            margin: 0 10px;\n            -webkit-transition: initial;\n            -khtml-transition: initial;\n            -moz-transition: initial;\n            -ms-transition: initial;\n            transition: initial;\n        }\n        vg-scrub-bar.hide {\n            bottom: 0;\n            opacity: 0;\n        }\n        vg-controls vg-scrub-bar.hide {\n            bottom: initial;\n            opacity: initial;\n        }\n    ` ]\n})\nexport class VgScrubBar implements OnInit, OnDestroy {\n  @HostBinding('class.hide') hideScrubBar = false;\n\n  @Input() vgFor: string;\n  @Input() vgSlider = true;\n\n  elem: HTMLElement;\n  target: any;\n  isSeeking = false;\n  wasPlaying = false;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI, vgControlsHiddenState: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe(hide => this.onHideScrubBar(hide)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  protected seekStart() {\n    if (this.target.canPlay) {\n      this.isSeeking = true;\n      if (this.target.state === VgStates.VG_PLAYING) {\n        this.wasPlaying = true;\n      }\n      this.target.pause();\n    }\n  }\n\n  protected seekMove(offset: number) {\n    if (this.isSeeking) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.time.current = percentage * this.target.time.total / 100;\n      this.target.seekTime(percentage, true);\n    }\n  }\n\n  protected seekEnd(offset: number) {\n    this.isSeeking = false;\n    if (this.target.canPlay) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.seekTime(percentage, true);\n      if (this.wasPlaying) {\n        this.wasPlaying = false;\n        this.target.play();\n      }\n    }\n  }\n\n  protected touchEnd() {\n    this.isSeeking = false;\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.target.play();\n    }\n  }\n\n  protected getTouchOffset(event: any) {\n    let offsetLeft = 0;\n    let element: any = event.target;\n    while (element) {\n      offsetLeft += element.offsetLeft;\n      element = element.offsetParent;\n    }\n    return event.touches[0].pageX - offsetLeft;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDownScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd($event.offsetX);\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUpScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekEnd($event.offsetX);\n      }\n    }\n  }\n\n  @HostListener('touchstart', ['$event'])\n  onTouchStartScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd(this.getTouchOffset($event));\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  @HostListener('document:touchmove', ['$event'])\n  onTouchMoveScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove(this.getTouchOffset($event));\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchcancel', ['$event']) onTouchCancelScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n  // @ts-ignore\n  @HostListener('document:touchend', ['$event']) onTouchEndScrubBar($event: any) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  arrowAdjustVolume(event: KeyboardEvent) {\n    if (this.target) {\n      if (event.keyCode === 38 || event.keyCode === 39) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n      } else if (event.keyCode === 37 || event.keyCode === 40) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n      }\n    }\n  }\n\n  getPercentage() {\n    return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n  }\n\n  onHideScrubBar(hide: boolean) {\n    this.hideScrubBar = hide;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar-buffering-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n  styles: [`\n        vg-scrub-bar-buffering-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-buffering-time .background {\n            background-color: rgba(255, 255, 255, 0.3);\n        }\n        vg-controls vg-scrub-bar-buffering-time {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n        vg-controls vg-scrub-bar-buffering-time .background {\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n    ` ]\n})\nexport class VgScrubBarBufferingTime implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getBufferTime() {\n    let bufferTime = '0%';\n\n    if (this.target && this.target.buffer && this.target.buffered.length) {\n      if (this.target.time.total === 0) {\n        bufferTime = '0%';\n      } else {\n        bufferTime = ((this.target.buffer.end / this.target.time.total) * 100) + '%';\n      }\n    }\n\n    return bufferTime;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  DoCheck,\n  SimpleChange,\n  ViewEncapsulation\n} from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:no-conflicting-lifecycle\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n@Component({\n  selector: 'vg-scrub-bar-cue-points',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"cue-point-container\">\n            <span *ngFor=\"let cp of cuePoints\" [style.width]=\"cp.$$style?.width\" [style.left]=\"cp.$$style?.left\"\n                  class=\"cue-point\"></span>\n        </div>\n    `,\n  styles: [`\n        vg-scrub-bar-cue-points {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-cue-points .cue-point-container .cue-point {\n            position: absolute;\n            height: 5px;\n            background-color: rgba(255, 204, 0, 0.7);\n        }\n        vg-controls vg-scrub-bar-cue-points {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n    ` ]\n})\nexport class VgScrubBarCuePoints implements OnInit, OnChanges, OnDestroy, DoCheck {\n  @Input() vgCuePoints: TextTrackCueList;\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  onLoadedMetadataCalled = false;\n  cuePoints: Array<any> = [];\n\n  subscriptions: Subscription[] = [];\n\n  totalCues = 0;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n    this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\n\n    if (this.onLoadedMetadataCalled) {\n      this.onLoadedMetadata();\n    }\n  }\n\n  onLoadedMetadata() {\n    if (this.vgCuePoints) {\n      // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n      // See: https://github.com/videogular/videogular2/issues/369\n      this.cuePoints = [];\n\n      for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n        const end = (this.vgCuePoints[i].endTime >= 0) ? this.vgCuePoints[i].endTime : this.vgCuePoints[i].startTime + 1;\n        const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n        let position = '0';\n        let percentWidth = '0';\n\n        if (typeof cuePointDuration === 'number' && this.target.time.total) {\n          percentWidth = ((cuePointDuration * 100) / this.target.time.total) + '%';\n          position = (this.vgCuePoints[i].startTime * 100 / (Math.round(this.target.time.total / 1000))) + '%';\n        }\n\n        (this.vgCuePoints[i] as any).$$style = {\n          width: percentWidth,\n          left: position\n        };\n\n        this.cuePoints.push(this.vgCuePoints[i]);\n      }\n    }\n  }\n\n  updateCuePoints() {\n    if (!this.target) {\n      this.onLoadedMetadataCalled = true;\n      return;\n    }\n    this.onLoadedMetadata();\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }) {\n    if (changes['vgCuePoints'].currentValue) {\n      this.updateCuePoints();\n    }\n  }\n\n  ngDoCheck() {\n    if (this.vgCuePoints) {\n      const changes = this.totalCues !== this.vgCuePoints.length;\n\n      if (changes) {\n        this.totalCues = this.vgCuePoints.length;\n        this.updateCuePoints();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-scrub-bar-current-time',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div><span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n  styles: [`\n        vg-scrub-bar-current-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-current-time .background {\n            background-color: white;\n        }\n        vg-controls vg-scrub-bar-current-time {\n            position: absolute;\n            top: calc(50% - 3px);\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n        vg-controls vg-scrub-bar-current-time .background {\n            border: 1px solid white;\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n\n        vg-scrub-bar-current-time .slider{\n            background: white;\n            height: 15px;\n            width: 15px;\n            border-radius: 50%;\n            box-shadow: 0px 0px 10px black;\n            margin-top: -5px;\n            margin-left: -10px;\n        }\n    ` ]\n})\nexport class VgScrubBarCurrentTime implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgSlider = false;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getPercentage() {\n    return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { Component, Input, ElementRef, OnInit, PipeTransform, Pipe, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\n// Workaround until we can use UTC with Angular Date Pipe\n@Pipe({ name: 'vgUtc' })\nexport class VgUtcPipe implements PipeTransform {\n  transform(value: number, format: string): string {\n    const date = new Date(value);\n    let result = format;\n    let ss: string | number = date.getUTCSeconds();\n    let mm: string | number = date.getUTCMinutes();\n    let hh: string | number = date.getUTCHours();\n\n    if (ss < 10) {\n      ss = '0' + ss;\n    }\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n    if (hh < 10) {\n      hh = '0' + hh;\n    }\n\n    result = result.replace(/ss/g, ss as string);\n    result = result.replace(/mm/g, mm as string);\n    result = result.replace(/hh/g, hh as string);\n\n    return result;\n  }\n}\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-time-display',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <span *ngIf=\"target?.isLive\">LIVE</span>\n        <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc:vgFormat }}</span>\n        <ng-content></ng-content>\n    `,\n  styles: [`\n        vg-time-display {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 60px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            pointer-events: none;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n    ` ]\n})\nexport class VgTimeDisplay implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgProperty = 'current';\n  @Input() vgFormat = 'mm:ss';\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getTime() {\n    let t = 0;\n\n    if (this.target) {\n      t = Math.round(this.target.time[this.vgProperty]);\n      t = isNaN(t) || this.target.isLive ? 0 : t;\n    }\n\n    return t;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, ElementRef, OnInit, Input, ViewEncapsulation, OnDestroy } from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\n\nexport interface Option {\n  id: string;\n  label: string;\n  selected: boolean;\n}\n\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-track-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"container\">\n            <div class=\"track-selected\"\n                [class.vg-icon-closed_caption]=\"!trackSelected\">\n                {{ trackSelected || '' }}\n            </div>\n\n            <select class=\"trackSelector\"\n                    (change)=\"selectTrack($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"track selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let track of tracks\"\n                    [value]=\"track.id\"\n                    [selected]=\"track.selected === true\">\n                    {{ track.label }}\n                </option>\n            </select>\n        </div>\n    `,\n  styles: [`\n        vg-track-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-track-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-track-selector select.trackSelector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-track-selector select.trackSelector::-ms-expand {\n            display: none;\n        }\n        vg-track-selector select.trackSelector option {\n            color: #000;\n        }\n        vg-track-selector .track-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-track-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    ` ]\n})\nexport class VgTrackSelector implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n\n  elem: HTMLElement;\n  target: any;\n  tracks: Array<Option>;\n  trackSelected: string;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n\n    const subs: Array<Option> = Array.from((this.API.getMasterMedia().elem as HTMLMediaElement).children)\n      .filter((item: HTMLElement) => item.tagName === 'TRACK')\n      .filter((item: HTMLTrackElement) => item.kind === 'subtitles')\n      .map((item: HTMLTrackElement) => ({\n        label: item.label,\n        selected: item.default === true,\n        id: item.srclang\n      }));\n\n    this.tracks = [\n      ...subs,\n      {\n        id: null,\n        label: 'Off',\n        selected: subs.every((item: Option) => item.selected === false)\n      }\n    ];\n\n    const track: Option = this.tracks.filter((item: Option) => item.selected === true)[0];\n    this.trackSelected = track.id;\n    this.ariaValue = track.label;\n  }\n\n  selectTrack(trackId: string) {\n    this.trackSelected = (trackId === 'null') ? null : trackId;\n\n    this.ariaValue = 'No track selected';\n\n    Array.from((this.API.getMasterMedia().elem as HTMLMediaElement).textTracks)\n      .forEach((item: TextTrack) => {\n        if (item.language === trackId) {\n          this.ariaValue = item.label;\n          item.mode = 'showing';\n        } else {\n          item.mode = 'hidden';\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges, Output, EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\nimport { BitrateOption } from '../../core/vg-core.module';\n\n\n// tslint:disable:no-output-on-prefix\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n@Component({\n  selector: 'vg-quality-selector',\n  encapsulation: ViewEncapsulation.None,\n  template: `\n        <div class=\"container\">\n            <div class=\"quality-selected\"\n                 [class.vg-icon-hd]=\"!bitrateSelected\">\n                {{ bitrateSelected?.label }}\n            </div>\n\n            <select class=\"quality-selector\"\n                    (change)=\"selectBitrate($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"quality selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let bitrate of bitrates\"\n                    [value]=\"bitrate.qualityIndex.toString()\"\n                    [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\">\n                    {{ bitrate.label }}\n                </option>\n            </select>\n        </div>\n    `,\n  styles: [`\n        vg-quality-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-quality-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-quality-selector select.quality-selector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-quality-selector select.quality-selector::-ms-expand {\n            display: none;\n        }\n        vg-quality-selector select.quality-selector option {\n            color: #000;\n        }\n        vg-quality-selector .quality-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-quality-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    ` ]\n})\nexport class VgQualitySelector implements OnInit, OnChanges, OnDestroy {\n  @Input() bitrates: BitrateOption[];\n\n  @Output() onBitrateChange: EventEmitter<BitrateOption> = new EventEmitter();\n\n  bitrateSelected: BitrateOption;\n\n  elem: HTMLElement;\n  target: any;\n\n  subscriptions: Subscription[] = [];\n\n  ariaValue: string | number;\n\n  constructor(ref: ElementRef, public API: VgAPI) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['bitrates'].currentValue && changes['bitrates'].currentValue.length) {\n      this.bitrates.forEach(item => item.label = (item.label || Math.round(item.bitrate / 1000)).toString());\n    }\n  }\n\n  selectBitrate(index: number) {\n    this.bitrateSelected = this.bitrates[index];\n    this.onBitrateChange.emit(this.bitrates[index]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgControls } from './vg-controls';\nimport { VgFullscreen } from './vg-fullscreen/vg-fullscreen';\nimport { VgMute } from './vg-mute/vg-mute';\nimport { VgVolume } from './vg-volume/vg-volume';\nimport { VgPlayPause } from './vg-play-pause/vg-play-pause';\nimport { VgPlaybackButton } from './vg-playback-button/vg-playback-button';\nimport { VgScrubBar } from './vg-scrub-bar/vg-scrub-bar';\nimport { VgScrubBarBufferingTime } from './vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';\nimport { VgScrubBarCuePoints } from './vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';\nimport { VgScrubBarCurrentTime } from './vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';\nimport { VgTimeDisplay, VgUtcPipe } from './vg-time-display/vg-time-display';\nimport { VgTrackSelector } from './vg-track-selector/vg-track-selector';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\nimport { VgQualitySelector } from './vg-quality-selector/vg-quality-selector';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgControls,\n    VgFullscreen,\n    VgMute,\n    VgVolume,\n    VgPlayPause,\n    VgPlaybackButton,\n    VgScrubBar,\n    VgScrubBarBufferingTime,\n    VgScrubBarCuePoints,\n    VgScrubBarCurrentTime,\n    VgTimeDisplay,\n    VgUtcPipe,\n    VgTrackSelector,\n    VgQualitySelector\n  ],\n  exports: [\n    VgControls,\n    VgFullscreen,\n    VgMute,\n    VgVolume,\n    VgPlayPause,\n    VgPlaybackButton,\n    VgScrubBar,\n    VgScrubBarBufferingTime,\n    VgScrubBarCuePoints,\n    VgScrubBarCurrentTime,\n    VgTimeDisplay,\n    VgUtcPipe,\n    VgTrackSelector,\n    VgQualitySelector\n  ],\n  providers: [VgControlsHidden]\n})\nexport class VgControlsModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VgEvents {\n  static VG_ABORT = 'abort';\n  static VG_CAN_PLAY = 'canplay';\n  static VG_CAN_PLAY_THROUGH = 'canplaythrough';\n  static VG_DURATION_CHANGE = 'durationchange';\n  static VG_EMPTIED = 'emptied';\n  static VG_ENCRYPTED = 'encrypted';\n  static VG_ENDED = 'ended';\n  static VG_ERROR = 'error';\n  static VG_LOADED_DATA = 'loadeddata';\n  static VG_LOADED_METADATA = 'loadedmetadata';\n  static VG_LOAD_START = 'loadstart';\n  static VG_PAUSE = 'pause';\n  static VG_PLAY = 'play';\n  static VG_PLAYING = 'playing';\n  static VG_PROGRESS = 'progress';\n  static VG_RATE_CHANGE = 'ratechange';\n  static VG_SEEK = 'seek';\n  static VG_SEEKED = 'seeked';\n  static VG_SEEKING = 'seeking';\n  static VG_STALLED = 'stalled';\n  static VG_SUSPEND = 'suspend';\n  static VG_TIME_UPDATE = 'timeupdate';\n  static VG_VOLUME_CHANGE = 'volumechange';\n  static VG_WAITING = 'waiting';\n  static VG_LOAD = 'load';\n  static VG_ENTER = 'enter';\n  static VG_EXIT = 'exit';\n  static VG_START_ADS = 'startads';\n  static VG_END_ADS = 'endads';\n}\n","import { ChangeDetectorRef, OnInit, Directive, Input, OnDestroy } from '@angular/core';\nimport { IPlayable, IMediaSubscriptions } from './i-playable';\nimport { Observable, Subscription, Subject, fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { VgStates } from '../states/vg-states';\nimport { VgAPI } from '../services/vg-api';\nimport { VgEvents } from '../events/vg-events';\nimport { IMediaElement } from './i-media-element';\nimport { timer, combineLatest } from 'rxjs';\n\n@Directive({\n  selector: '[vgMedia]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class VgMedia implements OnInit, OnDestroy, IPlayable {\n  elem: any;\n\n  @Input() vgMedia: IMediaElement;\n  @Input() vgMaster: boolean;\n\n  state: string = VgStates.VG_PAUSED;\n\n  time: any = { current: 0, total: 0, left: 0 };\n  buffer: any = { end: 0 };\n  track: any;\n  subscriptions: IMediaSubscriptions | any;\n\n  canPlay = false;\n  canPlayThrough = false;\n  isMetadataLoaded = false;\n  isWaiting = false;\n  isCompleted = false;\n  isLive = false;\n\n  isBufferDetected = false;\n\n  checkInterval = 200;\n  currentPlayPos = 0;\n  lastPlayPos = 0;\n\n  checkBufferSubscription: any;\n  syncSubscription: Subscription;\n  canPlayAllSubscription: any;\n  playAtferSync = false;\n\n  mutationObs: Subscription;\n  canPlayObs: Subscription;\n  canPlayThroughObs: Subscription;\n  loadedMetadataObs: Subscription;\n  waitingObs: Subscription;\n  progressObs: Subscription;\n  endedObs: Subscription;\n  playingObs: Subscription;\n  playObs: Subscription;\n  pauseObs: Subscription;\n  timeUpdateObs: Subscription;\n  volumeChangeObs: Subscription;\n  errorObs: Subscription;\n\n  bufferDetected: Subject<boolean> = new Subject();\n\n  playPromise: Promise<any>;\n\n  constructor(private api: VgAPI, private ref: ChangeDetectorRef) {\n\n  }\n\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    }\n\n    // Just in case we're creating this vgMedia dynamically register again into API\n    this.api.registerMedia(this);\n\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem as any, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem as any, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem as any, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem as any, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem as any, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem as any, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem as any, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem as any, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem as any, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem as any, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem as any, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem as any, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem as any, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem as any, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem as any, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem as any, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem as any, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem as any, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem as any, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem as any, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem as any, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem as any, VgEvents.VG_WAITING),\n\n      // Advertisement only events\n      startAds: fromEvent(this.elem as any, VgEvents.VG_START_ADS),\n      endAds: fromEvent(this.elem as any, VgEvents.VG_END_ADS),\n\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(\n        (observer: any) => {\n\n          const domObs = new MutationObserver((mutations) => {\n            observer.next(mutations);\n          });\n\n          domObs.observe(this.elem as any, { childList: true, attributes: true });\n\n          return () => {\n            domObs.disconnect();\n          };\n        }\n      ),\n\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(\n        () => {\n          this.prepareSync();\n        }\n      );\n    }\n  }\n\n  prepareSync() {\n    const canPlayAll: Array<Observable<any>> = [];\n\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(\n      map((...params) => {\n        const checkReadyState = (event) => {\n          return event.target.readyState === 4;\n        };\n        const allReady: boolean = params.some(checkReadyState);\n\n        if (allReady && !this.syncSubscription) {\n          this.startSync();\n          this.syncSubscription.unsubscribe();\n        }\n      }\n      )).subscribe();\n  }\n\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(\n      () => {\n        for (const media in this.api.medias) {\n          if (this.api.medias[media] !== this) {\n            const diff: number = this.api.medias[media].currentTime - this.currentTime;\n\n            if (diff < -0.3 || diff > 0.3) {\n              this.playAtferSync = (this.state === VgStates.VG_PLAYING);\n\n              this.pause();\n              this.api.medias[media].pause();\n              this.api.medias[media].currentTime = this.currentTime;\n            }  else {\n              if (this.playAtferSync) {\n                this.play();\n                this.api.medias[media].play();\n                this.playAtferSync = false;\n              }\n            }\n          }\n        }\n      }\n    );\n  }\n\n  onMutation(mutations: Array<MutationRecord>) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut: MutationRecord = mutations[i];\n\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        // tslint:disable-next-line:no-string-literal\n        if (mut.target['src'] && mut.target['src'].length > 0 && mut.target['src'].indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0;\n\n    // Start buffering until we can play the media file\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected);\n\n    // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n      return;\n    }\n\n    this.playPromise = this.vgMedia.play();\n\n    // browser has async play promise\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise\n        .then(() => {\n          this.playPromise = null;\n        })\n        .catch(() => {\n          this.playPromise = null;\n          // deliberately empty for the sake of eating console noise\n        });\n    }\n\n    return this.playPromise;\n  }\n\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise\n        .then(() => {\n          this.vgMedia.pause();\n        });\n    }  else {\n      this.vgMedia.pause();\n    }\n  }\n\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    // tslint:disable-next-line:no-unnecessary-initializer\n    let result = undefined;\n\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n\n    return result;\n  }\n\n  get duration() {\n    return this.vgMedia.duration;\n  }\n\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds;\n    // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n\n  get volume() {\n    return this.vgMedia.volume;\n  }\n\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  }\n  // @ts-ignore\n  onCanPlay(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onCanPlayThrough(event: any) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onLoadMetadata(event: any) {\n    this.isMetadataLoaded = true;\n\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n\n    this.state = VgStates.VG_PAUSED;\n\n    // Live streaming check\n    const t: number = Math.round(this.time.total);\n    this.isLive = (t === Infinity);\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onWait(event: any) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onComplete(event: any) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onStartPlaying(event: any) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPlay(event: any) {\n    this.state = VgStates.VG_PLAYING;\n\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onPause(event: any) {\n    this.state = VgStates.VG_PAUSED;\n\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onTimeUpdate(event: any) {\n    const end = this.buffered?.length - 1;\n\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onProgress(event: any) {\n    const end = this.buffered.length - 1;\n\n    if (end >= 0) {\n      this.buffer = { end: this.buffered.end(end) * 1000 };\n    }\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onVolumeChange(event: any) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  }\n  // @ts-ignore\n  onError(event: any) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  }\n\n  // http://stackoverflow.com/a/23828241/779529\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n\n    if (!this.isBufferDetected && this.currentPlayPos < (this.lastPlayPos + offset)) {\n      this.isBufferDetected = true;\n    }\n\n    if (this.isBufferDetected && this.currentPlayPos > (this.lastPlayPos + offset)) {\n      this.isBufferDetected = false;\n    }\n\n    // Prevent calls to bufferCheck after ngOnDestroy have been called\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n\n    this.lastPlayPos = this.currentPlayPos;\n  }\n\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(\n      () => {\n        this.bufferCheck();\n      }\n    );\n  }\n\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    this.isBufferDetected = false;\n\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n\n  seekTime(value: number, byPercent: boolean = false) {\n    let second: number;\n    const duration: number = this.duration;\n\n    if (byPercent) {\n      second = value * duration / 100;\n    }  else {\n      second = value;\n    }\n\n    this.currentTime = second;\n  }\n\n  addTextTrack(type: string, label?: string, language?: string, mode?: 'disabled' | 'hidden' | 'showing'): TextTrack {\n    const newTrack: TextTrack = this.vgMedia.addTextTrack(type, label, language);\n\n    if (mode) {\n      newTrack.mode = mode;\n    }\n    return newTrack;\n  }\n\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs.unsubscribe();\n    this.canPlayObs.unsubscribe();\n    this.canPlayThroughObs.unsubscribe();\n    this.loadedMetadataObs.unsubscribe();\n    this.waitingObs.unsubscribe();\n    this.progressObs.unsubscribe();\n    this.endedObs.unsubscribe();\n    this.playingObs.unsubscribe();\n    this.playObs.unsubscribe();\n    this.pauseObs.unsubscribe();\n    this.timeUpdateObs.unsubscribe();\n    this.volumeChangeObs.unsubscribe();\n    this.errorObs.unsubscribe();\n\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    if (this.syncSubscription) {\n      this.syncSubscription.unsubscribe();\n    }\n\n    this.bufferDetected.complete();\n    this.bufferDetected.unsubscribe();\n\n    this.api.unregisterMedia(this);\n  }\n}\n","import { Directive, ElementRef, EventEmitter, OnDestroy, OnInit, Output, DoCheck } from '@angular/core';\nimport { VgEvents } from '../events/vg-events';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\n\n@Directive({\n  selector: '[vgCuePoints]'\n})\n// tslint:disable-next-line:directive-class-suffix\nexport class VgCuePoints implements OnInit, OnDestroy, DoCheck {\n  // tslint:disable:no-output-on-prefix\n  @Output() onEnterCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onUpdateCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onExitCuePoint: EventEmitter<any> = new EventEmitter();\n  @Output() onCompleteCuePoint: EventEmitter<any> = new EventEmitter();\n\n  subscriptions: Subscription[] = [];\n  cuesSubscriptions: Subscription[] = [];\n\n  onLoad$: Observable<any>;\n  onEnter$: Observable<any>;\n  onExit$: Observable<any>;\n\n  totalCues = 0;\n\n  constructor(public ref: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n\n  onLoad(event: any) {\n    if (event.target && event.target.track) {\n      const cues: TextTrackCue[] = event.target.track.cues;\n\n      this.ref.nativeElement.cues = cues;\n\n      this.updateCuePoints(cues);\n    } else if (event.target && event.target.textTracks && event.target.textTracks.length) {\n        const cues: TextTrackCue[] = event.target.textTracks[0].cues;\n        this.ref.nativeElement.cues = cues;\n        this.updateCuePoints(cues);\n    }\n  }\n\n  updateCuePoints(cues: TextTrackCue[]) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n\n  onEnter(event: any) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n\n  onExit(event: any) {\n    this.onExitCuePoint.emit(event.target);\n  }\n\n  ngDoCheck() {\n\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import {\n  Output,\n  Component,\n  EventEmitter,\n  ElementRef,\n  HostBinding,\n  QueryList,\n  AfterContentInit,\n  ContentChildren, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { VgAPI } from '../services/vg-api';\nimport { VgFullscreenAPI } from '../services/vg-fullscreen-api';\nimport { VgUtils } from '../services/vg-utils';\nimport { VgMedia } from '../vg-media/vg-media';\nimport { Subscription } from 'rxjs';\nimport { VgControlsHidden } from '../services/vg-controls-hidden';\n\n@Component({\n  selector: 'vg-player',\n  encapsulation: ViewEncapsulation.None,\n  template: `<ng-content></ng-content>`,\n  styles: [`\n        vg-player {\n            font-family: 'videogular';\n            position: relative;\n            display: flex;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: black;\n        }\n        vg-player.fullscreen {\n            position: fixed;\n            left: 0;\n            top: 0;\n        }\n        vg-player.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n    ` ],\n  providers: [VgAPI, VgFullscreenAPI, VgControlsHidden]\n})\n// tslint:disable:component-class-suffix\n // tslint:disable:no-output-on-prefix\nexport class VgPlayer implements AfterContentInit, OnDestroy {\n  elem: HTMLElement;\n\n  @HostBinding('class.fullscreen') isFullscreen = false;\n  @HostBinding('class.native-fullscreen') isNativeFullscreen = false;\n  @HostBinding('class.controls-hidden') areControlsHidden = false;\n  @HostBinding('style.z-index') zIndex: string;\n\n\n  @Output()\n  onPlayerReady: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  onMediaReady: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(VgMedia)\n  medias: QueryList<VgMedia>;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(ref: ElementRef, public api: VgAPI, public fsAPI: VgFullscreenAPI, private controlsHidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n\n    this.api.registerElement(this.elem);\n  }\n\n  ngAfterContentInit() {\n    this.medias.toArray().forEach((media) => {\n      this.api.registerMedia(media);\n    });\n\n    this.fsAPI.init(this.elem, this.medias);\n\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtils.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    this.areControlsHidden = hidden;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { IMediaElement } from './i-media-element';\nimport { AudioTrackList, VideoTrackList } from '../track-types';\n\nexport class VgMediaElement implements IMediaElement {\n\n \n  id: string;\n  elem: any;\n  get audioTracks(): AudioTrackList { return null; }\n  autoplay: boolean;\n  buffered: TimeRanges;\n  controls: boolean;\n  crossOrigin: string | any;\n  currentSrc: string;\n  currentTime: number;\n\n  defaultMuted: boolean;\n  defaultPlaybackRate: number;\n  duration: number;\n  ended: boolean;\n  error: MediaError;\n  loop: boolean;\n  mediaKeys: MediaKeys | any;\n  msAudioCategory: string;\n  msAudioDeviceType: string;\n  msGraphicsTrustStatus: MSGraphicsTrust;\n  msKeys: MSMediaKeys;\n  msPlayToDisabled: boolean;\n  msPlayToPreferredSourceUri: string;\n  msPlayToPrimary: boolean;\n  msPlayToSource: any;\n  msRealTime: boolean;\n  muted: boolean;\n  networkState: number;\n  onencrypted: (ev: MediaEncryptedEvent) => any;\n  onmsneedkey: (ev: MSMediaKeyNeededEvent) => any;\n  paused: boolean;\n  playbackRate: number;\n  played: TimeRanges;\n  preload: string;\n  readyState: number;\n  seekable: TimeRanges;\n  seeking: boolean;\n  src: string;\n  srcObject: MediaStream | any;\n  textTracks: TextTrackList;\n  videoTracks: VideoTrackList;\n  volume: number;\n  HAVE_CURRENT_DATA: number;\n  HAVE_ENOUGH_DATA: number;\n  HAVE_FUTURE_DATA: number;\n  HAVE_METADATA: number;\n  HAVE_NOTHING: number;\n  NETWORK_EMPTY: number;\n  NETWORK_IDLE: number;\n  NETWORK_LOADING: number;\n  NETWORK_NO_SOURCE: number;\n  // @ts-ignore\n  addTextTrack(kind: string, label?: string, language?: string): TextTrack {\n    return null;\n  }\n  // @ts-ignore\n  canPlayType(type: string): string {\n    return null;\n  }\n\n  load(): void {\n  }\n\n  msClearEffects(): void {\n  }\n\n  msGetAsCastingSource(): any {\n    return null;\n  }\n  // @ts-ignore\n  msInsertAudioEffect(activatableClassId: string, effectRequired: boolean, config?: any): void {\n  }\n  // @ts-ignore\n  msSetMediaKeys(mediaKeys: MSMediaKeys): void {\n  }\n  // @ts-ignore\n  msSetMediaProtectionManager(mediaProtectionManager?: any): void {\n  }\n\n  pause(): void {\n  }\n\n  play(): Promise<any> {\n    return null;\n  }\n  // @ts-ignore\n  setMediaKeys(mediaKeys: MediaKeys | any): Promise<void> {\n    return null;\n  }\n  // @ts-ignore\n  addEventListener(type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean): void {\n  }\n}\n","import { VgMediaElement } from './vg-media/vg-media-element';\nimport { NgModule } from '@angular/core';\nimport { VgControlsHidden } from './services/vg-controls-hidden';\nimport { VgFullscreenAPI } from './services/vg-fullscreen-api';\nimport { VgUtils } from './services/vg-utils';\nimport { VgAPI } from './services/vg-api';\nimport { VgMedia } from './vg-media/vg-media';\nimport { VgCuePoints } from './vg-cue-points/vg-cue-points';\nimport { VgPlayer } from './vg-player/vg-player';\nimport { VgStates } from './states/vg-states';\nimport { VgEvents } from './events/vg-events';\n\n\nexport * from './vg-media/i-media-element';\nexport * from './vg-media/i-playable';\nexport * from './vg-media/vg-media-element';\nexport * from './services/vg-api';\nexport * from './services/vg-fullscreen-api';\nexport * from './services/vg-utils';\nexport * from './services/vg-controls-hidden';\nexport * from './events/vg-events';\nexport * from './states/vg-states';\n\n\n\nexport interface BitrateOption {\n  qualityIndex: number;\n  width: number;\n  height: number;\n  bitrate: number;\n  mediaType: string;\n  label?: string;\n}\nexport interface AudioTrack {\n  enabled: boolean;\n  readonly id: string;\n  kind: string;\n  readonly label: string;\n  language: string;\n  readonly sourceBuffer: SourceBuffer | null;\n}\n\ndeclare var AudioTrack: {\n  prototype: AudioTrack;\n  new (): AudioTrack;\n};\n\nexport interface AudioTrackListEventMap {\n  addtrack: TrackEvent;\n  change: Event;\n  removetrack: TrackEvent;\n}\n\n/** Used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list. */\nexport interface AudioTrackList extends EventTarget {\n  readonly length: number;\n  onaddtrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\n  onchange: ((this: AudioTrackList, ev: Event) => any) | null;\n  onremovetrack: ((this: AudioTrackList, ev: TrackEvent) => any) | null;\n  getTrackById(id: string): AudioTrack | null;\n  item(index: number): AudioTrack;\n  addEventListener<K extends keyof AudioTrackListEventMap>(\n    type: K,\n    listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener<K extends keyof AudioTrackListEventMap>(\n    type: K,\n    listener: (this: AudioTrackList, ev: AudioTrackListEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n  [index: number]: AudioTrack;\n}\n\ndeclare var AudioTrackList: {\n  prototype: AudioTrackList;\n  new (): AudioTrackList;\n};\n\n/** A single video track from a <video> element. */\nexport interface VideoTrack {\n  readonly id: string;\n  kind: string;\n  readonly label: string;\n  language: string;\n  selected: boolean;\n  readonly sourceBuffer: SourceBuffer | null;\n}\n\ndeclare var VideoTrack: {\n  prototype: VideoTrack;\n  new (): VideoTrack;\n};\n\nexport interface VideoTrackListEventMap {\n  addtrack: TrackEvent;\n  change: Event;\n  removetrack: TrackEvent;\n}\n\n/** Used to represent a list of the video tracks contained within a <video> element, with each track represented by a separate VideoTrack object in the list. */\nexport interface VideoTrackList extends EventTarget {\n  readonly length: number;\n  onaddtrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\n  onchange: ((this: VideoTrackList, ev: Event) => any) | null;\n  onremovetrack: ((this: VideoTrackList, ev: TrackEvent) => any) | null;\n  readonly selectedIndex: number;\n  getTrackById(id: string): VideoTrack | null;\n  item(index: number): VideoTrack;\n  addEventListener<K extends keyof VideoTrackListEventMap>(\n    type: K,\n    listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  removeEventListener<K extends keyof VideoTrackListEventMap>(\n    type: K,\n    listener: (this: VideoTrackList, ev: VideoTrackListEventMap[K]) => any,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void;\n  [index: number]: VideoTrack;\n}\n\ndeclare var VideoTrackList: {\n  prototype: VideoTrackList;\n  new (): VideoTrackList;\n};\n\n\n\n@NgModule({\n  declarations: [VgMedia, VgCuePoints, VgPlayer],\n  exports: [VgMedia, VgCuePoints, VgPlayer],\n  providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents]\n})\nexport class VgCoreModule { }\n","// tslint:disable-next-line:no-reference\n///<reference path='./google.ima.ts'/>\nimport { Component, ElementRef, Input, HostBinding, ViewEncapsulation, OnInit, OnDestroy, Output, EventEmitter } from '@angular/core';\nimport { IPlayable } from '../core/vg-media/i-playable';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgEvents } from '../core/events/vg-events';\nimport { VgFullscreenAPI } from '../core/services/vg-fullscreen-api';\nimport { Subscription } from 'rxjs';\n\n\n // tslint:disable:no-output-on-prefix\n// tslint:disable:ban-types\n// tslint:disable:component-class-suffix\n@Component({\n  selector: 'vg-ima-ads',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-ima-ads\"></div>`,\n  styles: [`\n        vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            z-index: 300;\n        }\n        vg-ima-ads .vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n    ` ]\n})\n\nexport class VgImaAds implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  @Input() vgNetwork: string;\n  @Input() vgUnitPath: string;\n  @Input() vgCompanion: string;\n\n  @Input() vgCompanionSize: Array<Number>;\n  @Input() vgAdTagUrl: string;\n  @Input() vgSkipButton: string;\n\n\n  @Output() onAdStart: EventEmitter<boolean> = new EventEmitter();\n  @Output() onAdStop: EventEmitter<boolean> = new EventEmitter();\n  @Output() onSkipAd: EventEmitter<boolean> = new EventEmitter();\n\n  elem: HTMLElement;\n  target: IPlayable;\n  ima: Ima;\n  isFullscreen = false;\n  skipButton: HTMLElement;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('style.display') displayState = 'none';\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI) {\n    this.elem = ref.nativeElement;\n    this.onContentEnded = this.onContentEnded.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    if (typeof google === 'undefined') {\n      this.onMissingGoogleImaLoader();\n      return;\n    }\n\n    this.target = this.API.getMediaById(this.vgFor);\n\n    this.initializations();\n\n    this.subscriptions.push(this.target.subscriptions.ended.subscribe(this.onContentEnded.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onUpdateState.bind(this)));\n\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n      this.onAdsManagerLoaded.bind(this),\n      false\n    );\n    this.ima.adsLoader.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.loadAds();\n  }\n\n  initializations() {\n    this.ima = new Ima(this.elem);\n\n    if (this.vgSkipButton) {\n      this.skipButton = document.querySelector(this.vgSkipButton) as HTMLElement;\n      this.skipButton.style.display = 'none';\n      this.skipButton.addEventListener('click', this.onClickSkip.bind(this));\n      this.elem.insertBefore(this.skipButton, this.elem.firstChild);\n    }\n\n    window.addEventListener('resize', () => {\n      const w = this.API.videogularElement.offsetWidth;\n      const h = this.API.videogularElement.offsetHeight;\n\n      if (this.ima.adsManager) {\n        if (this.isFullscreen) {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n        } else {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n        }\n      }\n    });\n  }\n\n  loadAds() {\n    if (this.vgCompanion) {\n      googletag.cmd.push(\n        () => {\n          const adUnitPath: string = '/' + this.vgNetwork + '/' + this.vgUnitPath;\n          const slot: googletag.Slot = googletag.defineSlot(adUnitPath, this.vgCompanionSize, this.vgCompanion);\n\n          if (slot) {\n            slot.addService(googletag.companionAds());\n            slot.addService(googletag.pubads());\n\n            googletag\n              .companionAds()\n              .setRefreshUnfilledSlots(true);\n\n            googletag\n              .pubads()\n              .enableVideoAds();\n\n            googletag.enableServices();\n          }\n        }\n      );\n    }\n  }\n\n  onUpdateState(event: any) {\n    switch (event.type) {\n      case VgEvents.VG_PLAY:\n        if (!this.ima.adsLoaded) {\n          this.API.pause();\n          this.ima.adDisplayContainer.initialize();\n          this.requestAds(this.vgAdTagUrl);\n          this.ima.adsLoaded = true;\n        }\n        break;\n    }\n  }\n\n  requestAds(adTagUrl: string) {\n    // Show only to get computed style in pixels\n    this.show();\n\n    const adsRequest = new google.ima.AdsRequest();\n    const computedStyle = window.getComputedStyle(this.elem);\n    adsRequest.adTagUrl = adTagUrl;\n\n    adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n    adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n\n    this.ima.adsLoader.requestAds(adsRequest);\n  }\n\n  onAdsManagerLoaded(evt: google.ima.AdsManagerLoadedEvent) {\n    this.show();\n    this.ima.adsManager = evt.getAdsManager(this.target);\n    this.processAdsManager(this.ima.adsManager);\n  }\n  // @ts-ignore\n  processAdsManager(adsManager: google.ima.AdsManager) {\n    const w = this.API.videogularElement.offsetWidth;\n    const h = this.API.videogularElement.offsetHeight;\n\n    // Attach the pause/resume events.\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,\n      this.onContentPauseRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,\n      this.onContentResumeRequested.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,\n      this.onSkippableStateChanged.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.ALL_ADS_COMPLETED,\n      this.onAllAdsComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdEvent.Type.COMPLETE,\n      this.onAdComplete.bind(this),\n      false\n    );\n    this.ima.adsManager.addEventListener(\n      google.ima.AdErrorEvent.Type.AD_ERROR,\n      this.onAdError.bind(this),\n      false\n    );\n\n    this.ima.adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n    this.ima.adsManager.start();\n  }\n\n  onSkippableStateChanged() {\n    const isSkippable = this.ima.adsManager.getAdSkippableState();\n\n    if (isSkippable) {\n      this.skipButton.style.display = 'block';\n    } else {\n      this.skipButton.style.display = 'none';\n    }\n  }\n\n  onClickSkip() {\n    this.ima.adsManager.skip();\n    this.onSkipAd.emit(true);\n  }\n\n  onContentPauseRequested() {\n    this.show();\n    this.API.pause();\n    this.onAdStop.emit(true);\n  }\n\n  onContentResumeRequested() {\n    this.API.play();\n    this.onAdStart.emit(true);\n    this.hide();\n  }\n  // @ts-ignore\n  onAdError(evt) {\n    if (this.ima.adsManager) {\n      this.ima.adsManager.destroy();\n    }\n    this.hide();\n    this.API.play();\n    this.onAdStop.emit(true);\n  }\n\n  onAllAdsComplete() {\n    this.hide();\n    // The last ad was a post-roll\n    if (this.ima.adsManager.getCuePoints().join().indexOf('-1') >= 0) {\n      this.API.pause(); // it was stop() in Videogular v1\n      this.onAdStop.emit(true);\n    }\n  }\n\n  onAdComplete() {\n    // TODO: Update view with current ad count\n    this.ima.currentAd++;\n    this.onAdStop.emit(true);\n  }\n\n  show() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_START_ADS));\n    this.displayState = 'block';\n  }\n\n  hide() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_END_ADS));\n    this.displayState = 'none';\n  }\n\n  onContentEnded() {\n    this.ima.adsLoader.contentComplete();\n    this.onAdStop.emit(true);\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n    }\n  }\n\n  private onMissingGoogleImaLoader() {\n    this.hide();\n    this.API.play();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n\n\nexport class Ima {\n  adDisplayContainer: google.ima.AdDisplayContainer;\n  adsLoader: google.ima.AdsLoader;\n  adsManager: google.ima.AdsManager;\n  adsLoaded: boolean;\n  currentAd: number;\n\n  constructor(imaAdsElement: HTMLElement) {\n    this.adDisplayContainer = new google.ima.AdDisplayContainer(imaAdsElement);\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n\n    this.adsManager = null;\n    this.adsLoaded = false;\n    this.currentAd = 0;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgImaAds } from './vg-ima-ads';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgImaAds\n  ],\n  exports: [\n    VgImaAds\n  ]\n})\nexport class VgImaAdsModule { }\n","import {\n  Component, OnInit, Input, ElementRef, HostListener, ViewEncapsulation, OnDestroy,\n  HostBinding\n} from '@angular/core';\nimport { VgAPI } from '../core/services/vg-api';\nimport { VgStates } from '../core/states/vg-states';\nimport { Subscription } from 'rxjs';\nimport { VgFullscreenAPI } from '../core/services/vg-fullscreen-api';\nimport { VgControlsHidden } from '../core/services/vg-controls-hidden';\n\n@Component({\n  selector: 'vg-overlay-play',\n  encapsulation: ViewEncapsulation.None,\n  template: `<div class=\"vg-overlay-play\"\n                    [class.native-fullscreen]=\"isNativeFullscreen\"\n                    [class.controls-hidden]=\"areControlsHidden\">\n                   <div class=\"overlay-play-container\"\n                        [class.vg-icon-play_arrow]=\"getState() !== 'playing'\">\n                   </div>\n               </div>`,\n  styles: [`\n        vg-overlay-play {\n            z-index: 200;\n        }\n        vg-overlay-play.is-buffering {\n            display: none;\n        }\n        vg-overlay-play .vg-overlay-play {\n            transition: all 0.5s;\n            cursor: pointer;\n            position: absolute;\n            display: block;\n            color: white;\n            width: 100%;\n            height: 100%;\n            font-size: 80px;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n        vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow {\n            pointer-events: none;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 80px;\n        }\n        vg-overlay-play .vg-overlay-play:hover {\n            filter: alpha(opacity=100);\n            opacity: 1;\n        }\n        vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before {\n            transform: scale(1.2);\n        }\n    ` ]\n})\n// tslint:disable:component-class-suffix\nexport class VgOverlayPlay implements OnInit, OnDestroy {\n  @Input() vgFor: string;\n  elem: HTMLElement;\n  target: any;\n\n  isNativeFullscreen = false;\n  areControlsHidden = false;\n\n  subscriptions: Subscription[] = [];\n\n  @HostBinding('class.is-buffering') isBuffering = false;\n\n  constructor(ref: ElementRef, public API: VgAPI, public fsAPI: VgFullscreenAPI, private controlsHidden: VgControlsHidden) {\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.subscriptions.push(\n      this.target.subscriptions.bufferDetected.subscribe(\n        isBuffering => this.onUpdateBuffer(isBuffering)\n      )\n    );\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  onChangeFullscreen(fsState: boolean) {\n    if (this.fsAPI.nativeFullscreen) {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden: boolean) {\n    this.areControlsHidden = hidden;\n  }\n\n  @HostListener('click')\n  onClick() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    let state = VgStates.VG_PAUSED;\n\n    if (this.target) {\n      if (this.target.state instanceof Array) {\n        for (let i = 0, l = this.target.state.length; i < l; i++) {\n          if (this.target.state[i] === VgStates.VG_PLAYING) {\n            state = VgStates.VG_PLAYING;\n            break;\n          }\n        }\n      } else {\n        state = this.target.state;\n      }\n    }\n\n    return state;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VgOverlayPlay } from './vg-overlay-play';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgOverlayPlay\n  ],\n  exports: [\n    VgOverlayPlay\n  ]\n})\nexport class VgOverlayPlayModule { }\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { Subscription } from 'rxjs';\nimport { IDRMLicenseServer } from '../vg-streaming.module';\nimport { BitrateOption } from '../../core/vg-core.module';\n\ndeclare let dashjs;\n\n@Directive({\n  selector: '[vgDash]',\n  exportAs: 'vgDash'\n})\n// tslint:disable:directive-class-suffix\n // tslint:disable:no-output-on-prefix\n // tslint:disable:no-string-literal\nexport class VgDASH implements OnInit, OnChanges, OnDestroy {\n  @Input() vgDash: string;\n  @Input() vgDRMToken: string;\n  @Input() vgDRMLicenseServer: IDRMLicenseServer;\n\n\n  @Output() onGetBitrates: EventEmitter<BitrateOption[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  dash: any;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgAPI) { }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['vgDash'] && changes['vgDash'].currentValue) {\n      this.createPlayer();\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    }\n\n    // It's a DASH source\n    if (this.vgDash && (\n      (this.vgDash.indexOf('.mpd') > -1) ||\n      (this.vgDash.indexOf('mpd-time-csf') > -1))\n    ) {\n      let drmOptions;\n\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = { Authorization: this.vgDRMToken };\n            }\n          }\n        }\n      }\n\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.getDebug().setLogToBrowserConsole(false);\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n\n        if (audioList.length > 1) {\n          audioList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n\n          this.onGetBitrates.emit(audioList);\n        }\n\n        if (videoList.length > 1) {\n          videoList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOption) {\n    if (this.dash) {\n      if (bitrate.qualityIndex > 0) {\n        if (this.dash.getAutoSwitchQualityFor(bitrate.mediaType)) {\n          this.dash.setAutoSwitchQualityFor(bitrate.mediaType, false);\n        }\n\n        const nextIndex = bitrate.qualityIndex - 1;\n        this.dash.setQualityFor(bitrate.mediaType, nextIndex);\n      } else {\n        this.dash.setAutoSwitchQualityFor(bitrate.mediaType, true);\n      }\n    }\n  }\n\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { VgAPI } from '../../core/services/vg-api';\nimport { IHLSConfig } from './hls-config';\nimport { Subscription } from 'rxjs';\nimport { BitrateOption } from '../../core/vg-core.module';\n\ndeclare let Hls;\n\n@Directive({\n  selector: '[vgHls]',\n  exportAs: 'vgHls'\n})\n// tslint:disable:no-string-literal\n// tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\nexport class VgHLS implements OnInit, OnChanges, OnDestroy {\n  @Input() vgHls: string;\n  @Input() vgHlsHeaders: { [key: string]: string } = {};\n  @Output() onGetBitrates: EventEmitter<BitrateOption[]> = new EventEmitter();\n\n  vgFor: string;\n  target: any;\n  hls: any;\n  preload: boolean;\n  crossorigin: string;\n  config: IHLSConfig;\n\n  subscriptions: Subscription[] = [];\n\n  constructor(private ref: ElementRef, public API: VgAPI) { }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n\n\n    this.config = {\n      autoStartLoad: this.preload\n    } as IHLSConfig;\n    // @ts-ignore\n    this.config.xhrSetup = (xhr, url) => {\n      // Send cookies\n      if (this.crossorigin === 'use-credentials') {\n        xhr.withCredentials = true;\n      }\n      for (const key of Object.keys(this.vgHlsHeaders)) {\n        xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n      }\n    };\n\n    this.createPlayer();\n\n    if (!this.preload) {\n      this.subscriptions.push(\n        this.API.subscriptions.play.subscribe(\n          () => {\n            if (this.hls) {\n              this.hls.startLoad(0);\n            }\n          }\n        )\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    if (changes['vgHls'] && changes['vgHls'].currentValue) {\n      this.createPlayer();\n    } else if (changes['vgHlsHeaders'] && changes['vgHlsHeaders'].currentValue) {\n      // Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    }\n\n    // It's a HLS source\n    if (this.vgHls && this.vgHls.indexOf('m3u8') > -1 && Hls.isSupported() && this.API.isPlayerReady) {\n      const video: HTMLVideoElement = this.ref.nativeElement;\n\n      this.hls = new Hls(this.config);\n      // @ts-ignore\n      this.hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n        const videoList = [];\n\n        videoList.push({\n          qualityIndex: 0,\n          width: 0,\n          height: 0,\n          bitrate: 0,\n          mediaType: 'video',\n          label: 'AUTO'\n        });\n\n        data.levels.forEach((item, index) => {\n          videoList.push({\n            qualityIndex: ++index,\n            width: item.width,\n            height: item.height,\n            bitrate: item.bitrate,\n            mediaType: 'video',\n            label: item.name\n          });\n        });\n\n        this.onGetBitrates.emit(videoList);\n      }\n      );\n      // @ts-ignore\n      this.hls.on(Hls.Events.LEVEL_LOADED, (event, data) => {\n        this.target.isLive = data.details.live;\n      }\n      );\n\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n\n  setBitrate(bitrate: BitrateOption) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VgDASH } from './vg-dash/vg-dash';\nimport { VgHLS } from './vg-hls/vg-hls';\n\nexport interface IDRMLicenseServer {\n  [index: string]: {\n    serverURL: string;\n  };\n}\n\n\nexport * from './vg-dash/vg-dash';\nexport * from './vg-hls/vg-hls';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    VgDASH, VgHLS\n  ],\n  exports: [\n    VgDASH, VgHLS\n  ]\n})\nexport class VgStreamingModule { }\n"]}